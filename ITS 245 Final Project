package Golf;

import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;

import java.awt.*;   

abstract class Head2HeadGolf {
	
	

	public static void main(String[] args) {  // Main File
		{	
	
    java.util.ArrayList<String> futureTeams =
    new java.util.ArrayList<String>();
    Scanner scan = new Scanner (System.in);
    Scanner keyboard = new Scanner(System.in); // Create a Scanner object for keyboard input as in the exercises we did 
    

   final int teams = 4; // Constant for number of teams
   String name;
	int playerID;
	int age;
	
	// Introduction message 
	 System.out.println("Welcome to the Head2Head Golf simulator!!!");
	 System.out.print(System.lineSeparator());
	 
	 // Create new Date Object
     Date date = new Date();

     // Print date and time
     System.out.print("Today's date and time:");
     System.out.println(date.toString());
     System.out.print(System.lineSeparator());

	 
	 //Create Boolean to determine if User is familiar with Head2Head Golf rules, if not the rules will be given.
     String ans;
     boolean Yes = true;
     boolean No = false;
     scan = new Scanner(System.in); { 
			System.out.println("Are you familiar with the rules of Head2Head Golf? Enter Yes or No");
			ans = scan. nextLine();
		}
     if (ans.equals("Yes" )) {
             Yes = true;
         } else if (ans.equals("No")) {
         	System.out.println("The rules are simple. There are a total of 4 teams, But only 2 winners." 
         + "\n" + "Each team will consist of 2 memebers." + "There will only be two matches."+ "\n" +
         "Whoever has the lowest score at the end of the match wins." + 
         "The game can also end with a tie");
             No = false;
         } else { 
             System.out.println("Please relpy using only Yes or No with capital letters");
         }
     		System.out.print(System.lineSeparator()); 
	 	
     		{
    		 ArrayList<String> Team1 = new ArrayList<String>();
     	    ArrayList<String> Team2 = new ArrayList<String>();
     	    ArrayList<String> Team3 = new ArrayList<String>();
     	    ArrayList<String> Team4 = new ArrayList<String>();
     	    
     	  
     	  for (int index = 0; index < Team1.size(); index++)
    	       System.out.println(Team1.get(index));	
     	// Create Player Objects 
   	    //Team 1
     	 Team1.add("James Smith");
   	    players James = new players();
     		James.name = "James Smith";
     		
     	Team1.add("Catherine Wells");
       	players Catherine = new players();
       	Catherine.name = "Catherine Wells";
     		
       	for (int index = 0; index < Team2.size(); index++)
 	       System.out.println(Team2.get(index));	
  	// Create Player Objects 
	    //Team 2
       	Team2.add("Kevin Jones");
	    players Kevin = new players();
  		Kevin.name = "Kevin Jones";
  		
  		Team2.add("Edward Wilson");
    	players Edward = new players();
    	Edward.name = "Edward Wilson"; 		
         		
         		
    	for (int index = 0; index < Team3.size(); index++)
  	       System.out.println(Team3.get(index));	
   	// Create Player Objects 
 	    //Team 2
    	Team3.add("Sarah Oakley");
 	    players Sarah = new players();
   		Sarah.name = "Sarah Oakley";
   		
   		Team3.add("Joeseph Conner");
     	players Joeseph = new players();
     	Joeseph.name = "Joeseph Conner"; 
    	
 		
    	for (int index = 0; index < Team4.size(); index++)
  	       System.out.println(Team4.get(index));	
   	// Create Player Objects 
 	    //Team 2
    	Team4.add("Alice Parker");
 	    players Alice = new players();
   		Alice.name = "Alice Parker";
   		
   		Team4.add("Victoria Adams");
     	players Victoria = new players();
     	Victoria.name = "Victoria Adams"; 
    	
         		
     //Shows available team names that you can select 	
	//Switch Statement for available team names
    switch (teams) {
        case 1:  System.out.println("Badgers");
        case 2:  futureTeams.add("Gophers");
        case 3:  futureTeams.add("Whales");
        case 4:  futureTeams.add("Penguins");
        case 5:  futureTeams.add("Wolves");
        case 6: futureTeams.add("Ducks");
        case 7: futureTeams.add("Rhinos");
        case 8: futureTeams.add("Sharks");
                 break;
        default: break;
    }
    System.out.println("Availabe Team Names:");
    if (futureTeams.isEmpty()) {
        System.out.println("Invalid Team");
    } else {
        for (String teamName : futureTeams) {
            System.out.println(teamName);
        }
    }
    {
    	
    //Shows available team names that you can select 	for Team 1
    System.out.println("Choose name for" + Team1 + " Team 1:");
    String team1Name = scan.nextLine();								//Declare Team 3 Name variable as string
    team1Name = keyboard.toString();
    if ((team1Name != ("Whales"))									//Checks to see if user input correct team name
            || (team1Name != ("Penguins"))
            || (team1Name != ("Wolves"))
            || (team1Name != ("Ducks"))
            || (team1Name != ("Rhinos"))
            || (team1Name!= ("Sharks")))
    	
    {
        System.out.println("You can only choose from the availabe teams"); // If team name does not match available you will get this message.
        System.out.print(System.lineSeparator());
    }
    
    //Shows available team names that you can select for Team 2
    System.out.println("Choose name for" + Team2 + "Team 2:");
    String team2Name = scan.nextLine();							//Declare Team 3 Name variable as string
    team2Name = keyboard.toString();							
    if ((team2Name != ("Whales"))								//Checks to see if user input correct team name
            || (team2Name != ("Penguins"))							
            || (team2Name != ("Wolves"))
            || (team2Name != ("Ducks"))
            || (team2Name != ("Rhinos"))
            || (team2Name!= ("Sharks")))
            {
                System.out.println("You can only choose from the availabe teams");
                System.out.print(System.lineSeparator());
    }
    
  
    //Shows available team names that you can select for Team 3
    System.out.println("Choose name for" + Team3 + "Team 3:");
    String team3Name = scan.nextLine(); 			//Declare Team 3 Name variable as string 
    team3Name = keyboard.toString();
    if ((team3Name != ("Whales"))					//Checks to see if user input correct team name
            || (team3Name != ("Penguins"))
            || (team3Name != ("Wolves"))
            || (team3Name != ("Ducks"))
            || (team3Name != ("Rhinos"))
            || (team3Name != ("Sharks")))
            {
                System.out.println("You can only choose from the availabe teams"); // If not you will receive this message
            
    			System.out.print(System.lineSeparator());
            }
    			
    	//Shows available team names that you can select for Team 4		
    	System.out.println("Choose name for" + Team4 + "Team 4:");
    	String team4Name = scan.nextLine(); 			//Declare Team 4 Name variable as string 
    	team4Name = keyboard.toString();
    	if ((team4Name != ("Whales"))					//Checks to see if user input correct team name
    			|| (team4Name != ("Penguins"))
    		    || (team4Name != ("Wolves"))
    		    || (team4Name != ("Ducks"))
    		    || (team4Name != ("Rhinos"))
    		    || (team4Name != ("Sharks")))
    		    {
    		        System.out.println("You can only choose from the availabe teams"); // If not you will receive this message
    		     
    		    	System.out.print(System.lineSeparator());			
    		    }
 }
    
      // Displays all Superclass and Subclass methods to be called
       totalScores win = new totalScores();
        win.WinorLose();
        System.out.print(System.lineSeparator());
	} 
	{
		
    //Exception handling utilizing try and catch
	try {
	      int[] t1 = {0};
	      System.out.println(t1[0]);
	    } catch (Exception e) {
	      System.out.println("Something went wrong.");
	      
	      try {
		      int[]t2 = {1};
		      System.out.println(t2[1]);
		    } catch (Exception y) {
		      System.out.println("Something went wrong.");
		    }
	      
	      try {
		      int[] t3 = { 2};
		      System.out.println(t3[2]);
		    } catch (Exception x) {
		      System.out.println("Something went wrong.");
		    }
	      try {
		      int[] t4 = { 3};
		      System.out.println(t4[3]);
		    } catch (Exception w) {
		      System.out.println("Something went wrong.");
	      
	    }
	 }
}
		}
	}	
protected static String nextLine() {
	// TODO Auto-generated method stub
	return null;
}


	// Method Overriding created using Eclipse
	@Override
	public int hashCode() {
		// TODO Auto-generated method stub
		return super.hashCode();
	}



	@Override
	public boolean equals(Object obj) {
		// TODO Auto-generated method stub
		return super.equals(obj);
	}



	@Override
	protected Object clone() throws CloneNotSupportedException {
		// TODO Auto-generated method stub
		return super.clone();
	}



	@Override
	public String toString() {
		// TODO Auto-generated method stub
		return super.toString();
	}



	@Override
	protected void finalize() throws Throwable {
		// TODO Auto-generated method stub
		super.finalize();
	}



	protected static String introduce() {
		return null;
		// TODO Auto-generated method stub
